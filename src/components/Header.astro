---
import navData from "@data/navData.json";
import { Icon } from 'astro-icon/components';
import { getCollection } from "astro:content";

// Fetch all projects
const allProjects = await getCollection("projects");

// Group projects by category
const projectsByCategory = {
  "Capacity Building & Technical Assistance": allProjects.filter(
    project => project.data.category === "Capacity Building & Technical Assistance"
  ).sort((a, b) => (a.data.order || 0) - (b.data.order || 0)),
  
  "Network Coordination": allProjects.filter(
    project => project.data.category === "Network Coordination"
  ).sort((a, b) => (a.data.order || 0) - (b.data.order || 0)),
  
  "Strategic & Community-Based Planning": allProjects.filter(
    project => project.data.category === "Strategic & Community-Based Planning"
  ).sort((a, b) => (a.data.order || 0) - (b.data.order || 0)),

   "Past Support": allProjects.filter(
    project => project.data.category === "Past Support"
  ).sort((a, b) => (a.data.order || 0) - (b.data.order || 0))
};
---

<!-- ============================================ -->
<!--                 Navigation                   -->
<!-- ============================================ -->

<header id="cs-navigation">
    <div class="cs-container">
        <!--Nav Logo-->
        <a href="/" class="cs-logo" aria-label="back to home">
            <img
        src="/assets/images/hacbed-logo.svg"
        alt=""
        width="210"
        height="29"
        aria-hidden="true"
        decoding="async"
      />
        </a>
        <!--Navigation List-->
        <nav class="cs-nav" role="navigation">
            <!--Mobile Nav Toggle-->
            <button class="cs-toggle" id="mobile-menu-toggle" aria-label="mobile menu toggle">
                <div class="cs-box" aria-hidden="true">
                    <span class="cs-line cs-line1" aria-hidden="true"></span>
                    <span class="cs-line cs-line2" aria-hidden="true"></span>
                    <span class="cs-line cs-line3" aria-hidden="true"></span>
                </div>
            </button>
            <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
            <div class="cs-ul-wrapper" id="cs-ul-wrapper">
                <ul id="cs-expanded" class="cs-ul" aria-expanded="false">
                    <li class="cs-li">
                        <a href="/" class="cs-li-link cs-active">
                            Home
                        </a>
                    </li>
                    <!--Copy and paste this cs-dropdown list item and replace any .cs-li with this cs-dropdown group to make a new dropdown and it will work-->
                    <li class="cs-li cs-dropdown" tabindex="0">
                          <span class="cs-li-link cs-dropdown-toggle">
                            About
                            <img class="cs-drop-icon" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons%2Fdown.svg" alt="dropdown icon" width="15" height="15" decoding="async" aria-hidden="true">
                          </span>
                        <ul class="cs-drop-ul">
                           <li class="cs-drop-li">
                                <a href="/about" class="cs-li-link cs-drop-link">About Us / Mission</a>
                            </li>
                            <li class="cs-drop-li">
                                <a href="/about/how-we-work" class="cs-li-link cs-drop-link">How We Work</a>
                            </li>
                            <li class="cs-drop-li">
                                <a href="/about/our-ohana" class="cs-li-link cs-drop-link">Our 'Ohana</a>
                            </li>
                            <li class="cs-drop-li">
                                <a href="/about/our-roots" class="cs-li-link cs-drop-link">Our Roots</a>
                            </li>
                        </ul>
                    </li>
                   <!--Copy and paste this cs-dropdown list item and replace any .cs-li with this cs-dropdown group to make a new dropdown and it will work-->
                  <li class="cs-li cs-dropdown" tabindex="0">
    <span class="cs-li-link cs-dropdown-toggle">
         <a href="/#services-448" style="text-decoration: none; font-size: inherit; color: inherit;">Current Support</a>
        <img class="cs-drop-icon" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons%2Fdown.svg" alt="dropdown icon" width="15" height="15" decoding="async" aria-hidden="true">
    </span>
    <ul class="cs-drop-ul">
        <li class="cs-drop-li cs-drop3-main">
            <span class="cs-li-link cs-drop-link ">
                Capacity Building and Technical Assistance
                <img class="cs-drop-icon" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons%2Fdown.svg" alt="dropdown icon" width="15" height="15" decoding="async" aria-hidden="true">
            </span>
            <!--Tertiary-->
            <ul class="cs-drop3">
                {projectsByCategory["Capacity Building & Technical Assistance"].map(project => (
                    <li class="cs-drop-li3">
                        <a href={`/projects/${project.id}`} class="cs-li-link cs-drop-link cs-drop-link3">
                            {project.data.title}
                        </a>
                    </li>
                ))}
                {projectsByCategory["Capacity Building & Technical Assistance"].length === 0 && (
                    <li class="cs-drop-li3">
                        <span class="cs-li-link cs-drop-link cs-drop-link3">No content to show</span>
                    </li>
                )}
            </ul>
        </li>
        <li class="cs-drop-li cs-drop3-main">
            <span class="cs-li-link cs-drop-link ">
                Network Coordination
                <img class="cs-drop-icon" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons%2Fdown.svg" alt="dropdown icon" width="15" height="15" decoding="async" aria-hidden="true">
            </span>
            <!--Tertiary-->
            <ul class="cs-drop3">
                {projectsByCategory["Network Coordination"].map(project => (
                    <li class="cs-drop-li3">
                        <a href={`/projects/${project.id}`} class="cs-li-link cs-drop-link cs-drop-link3">
                            {project.data.title}
                        </a>
                    </li>
                ))}
                {projectsByCategory["Network Coordination"].length === 0 && (
                    <li class="cs-drop-li3">
                        <span class="cs-li-link cs-drop-link cs-drop-link3">No content to show</span>
                    </li>
                )}
            </ul>
        </li>
        <li class="cs-drop-li cs-drop3-main">
            <span class="cs-li-link cs-drop-link ">
                Strategic & Community-Based Planning
                <img class="cs-drop-icon" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons%2Fdown.svg" alt="dropdown icon" width="15" height="15" decoding="async" aria-hidden="true">
            </span>
            <!--Tertiary-->
            <ul class="cs-drop3">
                {projectsByCategory["Strategic & Community-Based Planning"].map(project => (
                    <li class="cs-drop-li3">
                        <a href={`/projects/${project.id}`} class="cs-li-link cs-drop-link cs-drop-link3">
                            {project.data.title}
                        </a>
                    </li>
                ))}
                {projectsByCategory["Strategic & Community-Based Planning"].length === 0 && (
                    <li class="cs-drop-li3">
                        <span class="cs-li-link cs-drop-link cs-drop-link3">No content to show</span>
                    </li>
                )}
            </ul>
        </li>
            <li class="cs-drop-li cs-drop3-main">
            <span class="cs-li-link cs-drop-link ">
                Past Support
                <img class="cs-drop-icon" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons%2Fdown.svg" alt="dropdown icon" width="15" height="15" decoding="async" aria-hidden="true">
            </span>
            <!--Tertiary-->
            <ul class="cs-drop3">
                {projectsByCategory["Past Support"].map(project => (
                    <li class="cs-drop-li3">
                        <a href={`/projects/${project.id}`} class="cs-li-link cs-drop-link cs-drop-link3">
                            {project.data.title}
                        </a>
                    </li>
                ))}
                {projectsByCategory["Past Support"].length === 0 && (
                    <li class="cs-drop-li3">
                        <span class="cs-li-link cs-drop-link cs-drop-link3">No content to show</span>
                    </li>
                )}
            </ul>
        </li>
        </ul>
        </li>
         <li class="cs-li">
                        <a href="/blog" class="cs-li-link">
                            Updates
                        </a>
                    </li>
                    <li class="cs-li">
                        <a href="/contact" class="cs-li-link">
                            Contact
                        </a>
                    </li>
                    <li class="cs-li">
                        <a href="http://paypal.com/us/fundraiser/charity/2274761" class="cs-li-link" target="_blank">
                            Donate
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
       <!-- <a href="" class="cs-button-solid cs-nav-button">Contact Us</a> -->
    </div>
</header>

<style lang="less">

/*-- -------------------------- -->
<---     Mobile Navigation      -->
<--- -------------------------- -*/
#cs-navigation .cs-dropdown button.cs-dropdown-button,
#cs-navigation .cs-dropdown .cs-li-link.cs-dropdown-button {
  font-family: "Lato", Arial, sans-serif !important;
}

#cs-navigation .cs-dropdown.cs-active .cs-drop-ul {
  height: auto !important;
  opacity: 1 !important;
  visibility: visible !important;
  transform: scale(1) !important;
}

/* Mobile - 1023px */
@media only screen and (max-width: 63.9375rem) {
  body {
    &.cs-open {
      overflow: hidden;
    }
  }

  #cs-navigation {
    width: 100%;
    /* prevents padding from affecting height and width */
    box-sizing: border-box;
    padding: (12/16rem) (16/16rem);
    background-color: #fff;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    position: fixed;
    z-index: 10000;

    &:before {
      /* black blurred overlay */
      content: "";
      width: 0%;
      height: 100vh;
      background: rgba(0, 0, 0, 0.6);
      opacity: 0;
      display: block;
      position: absolute;
      top: 100%;
      right: 0;
      z-index: -11;
      transition: width 0.5s, opacity 0.3s;
      -webkit-backdrop-filter: blur(10px);
      backdrop-filter: blur(10px);
    }

    &.cs-active {
      &:before {
        width: 100%;
        opacity: 1;
      }

      .cs-ul-wrapper {
        opacity: 1;
        visibility: visible;
        transform: scaleX(1);
        transition-delay: 0.2s;
      }

      .cs-li {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .cs-container {
      width: 100%;
      display: flex;
      justify-content: flex-end;
      align-items: center;
    }

    .cs-logo {
      width: 40%;
      max-width: (146/16rem);
      height: 100%;
      margin: 0 auto 0 0;
      /* prevents padding from affecting height and width */
      box-sizing: border-box;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 10;

      img {
        width: 100%;
        height: 100%;
        /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
        object-fit: contain;
        /* places the image to the left edge of the parent */
        object-position: left;
      }
    }

    .cs-toggle {
      /* 44px - 48px */
      width: clamp(2.75rem, 6vw, 3rem);
      height: clamp(2.75rem, 6vw, 3rem);
      margin: 0 0 0 auto;
      background-color: transparent;
      border: none;
      border-radius: (4/16rem);
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .cs-active {
      .cs-line1 {
        top: 50%;
        transform: translate(-50%, -50%) rotate(225deg);
      }

      .cs-line2 {
        top: 50%;
        transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
        transform-origin: center;
      }

      .cs-line3 {
        opacity: 0;
        bottom: 100%;
      }
    }

    .cs-box {
      /* 24px - 28px */
      width: clamp(1.5rem, 2vw, 1.75rem);
      /* 14px - 16px */
      height: clamp(0.875rem, 1.5vw, 1rem);
      position: relative;
    }

    .cs-line {
      width: 100%;
      height: 2px;
      background-color: #1a1a1a;
      border-radius: 2px;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
    }

    .cs-line1 {
      top: 0;
      transition: transform 0.5s, top 0.3s, left 0.3s;
      animation-duration: 0.7s;
      animation-timing-function: ease;
      animation-direction: normal;
      animation-fill-mode: forwards;
      transform-origin: center;
    }

    .cs-line2 {
      top: 50%;
      transform: translateX(-50%) translateY(-50%);
      transition: top 0.3s, left 0.3s, transform 0.5s;
      animation-duration: 0.7s;
      animation-timing-function: ease;
      animation-direction: normal;
      animation-fill-mode: forwards;
    }

    .cs-line3 {
      bottom: 0;
      transition: bottom 0.3s, opacity 0.3s;
    }

    .cs-ul-wrapper {
      height: 100vh;
      background-color: #fff;
      box-shadow: inset rgba(0, 0, 0, 0.2) 0px 8px 24px;
      opacity: 0;
      visibility: hidden;
      position: absolute;
      top: 100%;
      right: 0;
      left: auto;
      z-index: -1;
      overflow: hidden;
      transform: scaleX(0);
      transition: transform 0.4s, opacity 0.3s;
      transform-origin: top right;
    }

    .cs-ul {
      width: auto;
      min-width: 40%;
      height: 65vh;
      margin: 0;
      /* 28px - 40px */
      padding: (48/16rem) clamp(1.75rem, 3vw, 2.5rem) (32/16rem) (70/16rem);
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-end;
      gap: (20/16rem);
      overflow: scroll;
    }

    .cs-li {
      text-align: right;
      list-style: none;
      width: 100%;
      margin-right: 0;
      opacity: 0;
      /* transition from these values */
      transform: translateX(-40/16rem);
      transition: transform 0.6s, opacity 0.9s;

      &:nth-of-type(1) {
        transition-delay: 0.05s;
      }
      &:nth-of-type(2) {
        transition-delay: 0.1s;
      }
      &:nth-of-type(3) {
        transition-delay: 0.15s;
      }
      &:nth-of-type(4) {
        transition-delay: 0.2s;
      }
      &:nth-of-type(5) {
        transition-delay: 0.25s;
      }
      &:nth-of-type(6) {
        transition-delay: 0.3s;
      }
      &:nth-of-type(7) {
        transition-delay: 0.35s;
      }
      &:nth-of-type(8) {
        transition-delay: 0.4s;
      }
      &:nth-of-type(9) {
        transition-delay: 0.45s;
      }
    }

    .cs-li-link {
      /* 16px - 24px */
      font-size: clamp(1.2rem, 3vw, 2rem);
      color: inherit;
      line-height: 1.2em;
      text-decoration: none;
      margin: 0;
      display: inline-block;
      position: relative;

      &:before {
        /* active state underline */
        content: "";
        width: 100%;
        height: 1px;
        background: currentColor;
        opacity: 1;
        display: none;
        position: absolute;
        bottom: (-2/16rem);
        left: 0;
      }

      &.cs-active {
        &:before {
          display: block;
        }
      }
    }

    .cs-button-solid {
      display: none;
    }
  }
}

/*-- -------------------------- -->
<---     Navigation Dropdown    -->
<--- -------------------------- -*/

/* Mobile - 1023px */
@media only screen and (max-width: 63.9375rem) {
  #cs-navigation {
    .cs-dropdown {
      color: var(--bodyTextColorWhite);
      color: var(--headerColor);

      position: relative;

      &.cs-active {
        .cs-drop-ul {
          height: auto;
          margin: (12/16rem) 0 0 0;
          padding: (24/16rem);
          opacity: 1;
          visibility: visible;
          transform: scale(1);
        }

        .cs-drop-link {
          opacity: 1;
        }

        .cs-drop-icon {
          transform: rotate(0);
        }
      }

      .cs-li-link {
        position: relative;
        transition: opacity 0.3s;
      }
    }

    .cs-drop-icon {
      width: (15/16rem);
      height: auto;
      display: inline-block;
      color: inherit;
      transform: rotate(180deg);
      transition: 0.3s;
    }

    .cs-drop-ul {
      width: 100%;
      height: 0;
      margin: 0;
      box-sizing: border-box;
      padding: 0 (24/16rem) 0 (24/16rem);
      background-color: var(--primary);
      opacity: 0;
      display: flex;
      visibility: hidden;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-end;
      gap: (12/16rem);
      overflow: hidden;
      transform: scale(0);
      transition: padding 0.3s, margin 0.3s, height 0.3s, opacity 0.3s,
        transform 0.3s, visibility 0.3s;
      transform-origin: top right;
    }

    .cs-drop-li {
      text-align: inherit;
      list-style: none;
    }

    .cs-li-link {
      &.cs-drop-link {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 2vw, 1.25rem);
        color: #fff;
      }
    }

    .cs-dropdown-button {
      background-color: transparent;
      border: none;
      appearance: none;
      font-family: inherit;
    }
  }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #cs-navigation {
    .cs-dropdown {
      position: relative;
      &:hover,
      &.cs-active {
        cursor: pointer;
        .cs-drop-ul {
          opacity: 1;
          visibility: visible;
          transform: scaleY(1);
        }

        .cs-drop-li {
          opacity: 1;
          transform: translateY(0);
        }
      }
    }

    .cs-dropdown:has(.cs-drop-icon) {
      display: flex;
      align-items: center;
      &:hover {
        .cs-drop-icon {
        transform: rotate(0);
        }
      }
    }


    .cs-drop-icon {
      width: (15/16rem);
      height: auto;
      display: inline-block;
      color: inherit;
      transform: rotate(180deg);
      transition: 0.3s;
      
    }

    .cs-drop-ul {
      min-width: (200/16rem);
      margin: 0;
      padding: 0;
      background-color: #fff;
      box-shadow: rgba(149, 157, 165, 0.2) 0px 10px 16px;
      opacity: 0;
      border-bottom: 5px solid var(--primary);
      visibility: hidden;
      /* if you have 8 or more links in your dropdown nav, uncomment the columns property to make the list into 2 even columns. Change it to 3 or 4 if you need extra columns. Then remove the transition delays on the cs-drop-li so they don't have weird scattered animations */
      // columns: 2;
      position: absolute;
      top: 100%;
      z-index: -100;
      overflow: hidden;
      transform: scaleY(0);
      transition: transform 0.3s, visibility 0.3s, opacity 0.3s;
      transform-origin: top;
    }

    .cs-drop-li {
      font-size: (16/16rem);
      text-decoration: none;
      list-style: none;
      width: 100%;
      height: auto;
      color: var(--bodyTextColor);
      opacity: 0;
      display: block;
      transform: translateY(-10/16rem);
      transition: opacity 0.6s, transform 0.6s;

      &:nth-of-type(1) {
        transition-delay: 0.05s;
      }
      &:nth-of-type(2) {
        transition-delay: 0.1s;
      }
      &:nth-of-type(3) {
        transition-delay: 0.15s;
      }
      &:nth-of-type(4) {
        transition-delay: 0.2s;
      }
      &:nth-of-type(5) {
        transition-delay: 0.25s;
      }
      &:nth-of-type(6) {
        transition-delay: 0.3s;
      }
      &:nth-of-type(7) {
        transition-delay: 0.35s;
      }
      &:nth-of-type(8) {
        transition-delay: 0.4s;
      }
      &:nth-of-type(9) {
        transition-delay: 0.45s;
      }
      &:nth-of-type(10) {
        transition-delay: 0.5s;
      }
      &:nth-of-type(11) {
        transition-delay: 0.55s;
      }
      &:nth-of-type(12) {
        transition-delay: 0.6s;
      }
      &:nth-of-type(13) {
        transition-delay: 0.65s;
      }
    }

    .cs-li-link {
      &.cs-drop-link {
        font-size: (16/16rem);
        line-height: 1.5em;
        text-decoration: none;
        white-space: nowrap;
        width: 100%;
        /* prevents padding from affecting height and width */
        box-sizing: border-box;
        padding: (12/16rem);
        color: var(--bodyTextColor);
        display: block;
        transition: color 0.3s, background-color 0.3s;

        &:hover {
          background-color: #f7f7f7;
        }

        &:focus-within {
          outline: 2px solid currentColor;
          outline-offset: -2px;
        }

        &:before {
          display: none;
        }
      }
    }

    .cs-dropdown-button {
      background-color: transparent;
      border: none;
      appearance: none;
    }
  }
}

/*-- -------------------------- -->
<---     Desktop Navigation     -->
<--- -------------------------- -*/

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #cs-navigation {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: "Lato", "Arial", sans-serif;
    width: 100%;
    /* prevents padding from affecting height and width */
    box-sizing: border-box;
    padding: 0 (16/16rem);
    background-color: #fff;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    position: fixed;
    z-index: 10000;

    .cs-container {
      width: 100%;
      max-width: (1280/16rem);
      margin: auto;
      display: flex;
      justify-content: flex-end;
      align-items: center;
      gap: (24/16rem);
    }

    .cs-toggle {
      display: none;
    }

    .cs-logo {
      width: 18.4%;
      max-width: (350/16rem);
      height: (65/16rem);
      /* margin-right auto pushes everything away from it to the right */
      margin: 0 auto 0 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 100;

      img {
        width: 100%;
        height: 100%;
        /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
        object-fit: contain;
      }
    }

    .cs-ul {
      width: 100%;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: flex-start;
      align-items: center;
      /* 20px - 36px */
      gap: clamp(1.25rem, 2.6vw, 2.25rem);
    }

    .cs-li {
      list-style: none;
      padding: (32/16rem) 0;
      /* prevent flexbox from squishing it */
      flex: none;
    }

    .cs-li-link {
      /* 14px - 16px */
      font-size: clamp(1rem, 1.2vw, 1.125rem);
      line-height: 1.5em;
      text-decoration: none;
      margin: 0;
      color: var(--bodyTextColor);
      display: block;
      position: relative;
      &:hover {
        &:before {
          width: 100%;
        }
      }

      &.cs-active {
        &:before {
          width: 100%;
        }
      }

      &:before {
        /* active state underline */
        content: "";
        width: 0%;
        height: 2px;
        background: var(--primary);
        opacity: 1;
        display: block;
        position: absolute;
        bottom: (0/16rem);
        left: 0;
        transition: width 0.3s;
      }
    }
  }
}

/*-- -------------------------- -->
<---    Tertiary Navigation     -->
<--- -------------------------- -*/

/* Mobile - 1023px */
@media only screen and (max-width: 1023px) {
    #cs-navigation {
        .cs-dropdown {
            &.cs-active {
                .cs-drop-ul {
                    visibility: visible;
                    opacity: 1;
                    transform: scale(1);
                    margin: (12/16rem) auto 0 auto;
                    height: auto;
                    padding: (24/16rem);
                }

                .cs-drop-link {
                    opacity: 1;
                }

                .cs-dropdown-toggle {
                    pointer-events: none;
                }
            }
        }

        .cs-dropdown-toggle {
            pointer-events: none;
        }

        .cs-drop-ul {
            width: 67%;
            box-sizing: border-box;
        }

        .cs-drop3 {
            visibility: hidden;
            opacity: 0;
            transform: scale(0);
            display: flex;
            flex-direction: column;
            background-color: rgba(255, 255, 255, 0.2);
            box-sizing: border-box;
            height: 0;
            width: 100%;
            overflow: hidden;
            padding: 0;
            transition: padding 0.3s, margin 0.3s, height 0.3s, opacity 0.3s, transform 0.3s, visibility 0.3s;
            gap: (8/16rem);
            transform-origin: top;
        }

        .cs-drop-li {
            width: 100%;

            &.drop3-active {
                .cs-drop3 {
                    visibility: visible;
                    opacity: 1;
                    transform: scale(1);
                    height: auto;
                    padding: (20/16rem) (16/16rem) (20/16rem) (20/16rem);
                }

                .cs-drop3-main {
                    margin-bottom: (12/16rem);
                }
            }
        }

        .cs-drop3-main {
            font-weight: bold;
            transition: margin 0.3s;

            .cs-drop-icon {
                filter: grayscale(1) brightness(1000%);
            }
        }

        .cs-drop-li3 {
            list-style: none;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 1024px) {
    #cs-navigation {
        .cs-drop-ul {
            overflow: visible;
        }

        .cs-drop-li {
            z-index: 1;
            position: relative;

            &:hover {
                .cs-drop3 {
                    display: block;
                }
            }
        }

        .cs-drop3 {
            z-index: 10;
            position: absolute;
            top: 0;
            right: 100%;
            display: none;
            background-color: #fff;
            min-width: (200/16rem);
            padding: 0;
            box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
        }

        .cs-drop3-main {
            &:hover {
                .cs-drop-icon {
                    transform: rotate(-90deg);
                }
            }
        }

        .cs-drop-icon {
            transition: transform 0.3s;
        }

        .cs-drop-li3 {
            list-style: none;
        }
    }
}

</style>
