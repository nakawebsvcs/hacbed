---
import { getCollection, render  } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "src/layouts/BaseLayout.astro";
import { formatDate } from "@js/utils";
import ProjectPartners from "@components/ProjectPartners.astro";
import "@styles/blog.less";
import BackToTop from "@components/BackToTop.astro";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((entry) => ({
    params: { project: entry.id },
    props: { project: entry },
  }));
}


const { project } = Astro.props;
const { title, description, category, partners } = project.data;

// Safely extract image data
const hasImage = !!project.data.image;
const imageAlt = project.data.imageAlt || "Project image";

const { Content } = await render(project);
---

<BaseLayout
  title={title}
  description={description}
>

<!-- Custom hero/banner section -->
  <section class="page-header">
  <div class="full-width-image-container">
    <img src="/assets/images/kalo-home-img.jpg" alt="kalo field" />
   <div class="header-overlay">
  <h1 class="header-title">{category === "Unlisted" ? "HACBED's Work" : category}</h1>
</div>
  </div>
</section>

  <!-- ============================================ -->
  <!--              Main Blog Content               -->
  <!-- ============================================ -->

  <div class="blog-container">
  <!-- Centered header content -->
  <div class="centered-header">
    <!--Main Article Image - Only render if image exists-->
      {hasImage && (
        <picture class="project-mainImage">
          <Image 
            src={project.data.image} 
            alt={imageAlt} 
            width={795} 
            height={400} 
          />
        </picture>
      )}

    <!--Article Info-->
    <div class="article-group">
      <h1 class="blog-h1">{title}</h1>
      <div class="blog-authorGroup">
  {/* Only render the category span if category is not "Unlisted" */}
  {category !== "Unlisted" && (
    <span class="blog-author">{category}</span>
  )}
</div>
    </div>
  </div>
  
  <!-- Content and sidebar wrapper -->
  <div class="main-content-wrapper">
    <!--Main content -->
    <div class="main-content">
      <!-- ============================================ -->
      <!--                  Blog Article                -->
      <!-- ============================================ -->

      <article class="blog-article">
        <section id="blog-content" class="new-tab-links">
          <Content />
        </section>
      </article>
    </div>
    
    <!-- Partners sidebar -->
    {partners && partners.length > 0 && 
      <div id="project-partners-sidebar">
        <ProjectPartners partners={partners} />
      </div>
    }
  </div>
</div>

<BackToTop />

<script is:inline>
// Use a self-executing function to avoid global scope pollution
(function() {
  // Define the initialization function at the top level
  window.initProjectLinks = function() {
    console.log("[PROJECT-LINKS] Running global initialization function");
    setupNewTabLinks();
  };

  // Set up the main listeners with minimal code
  document.addEventListener('astro:page-load', function() {
    console.log("[PROJECT-LINKS] 'astro:page-load' event fired");
    window.initProjectLinks();
  });

  document.addEventListener('astro:after-swap', function() {
    console.log("[PROJECT-LINKS] 'astro:after-swap' event fired");
    // Wait for DOM to be fully updated
    setTimeout(window.initProjectLinks, 100);
  });

  // For direct navigation without transitions
  if (document.readyState === 'complete' || document.readyState === 'interactive') {
    console.log("[PROJECT-LINKS] Document already loaded, initializing now");
    setTimeout(window.initProjectLinks, 10);
  } else {
    document.addEventListener('DOMContentLoaded', function() {
      console.log("[PROJECT-LINKS] DOMContentLoaded event fired");
      window.initProjectLinks();
    });
  }

  // Setup New Tab Links
  function setupNewTabLinks() {
    console.log("[PROJECT-LINKS] Setting up new tab links");
    
    // Find the section first
    const projectContent = document.querySelector('.new-tab-links');
    
    if (!projectContent) {
      console.log("[PROJECT-LINKS] No project content with class 'new-tab-links' found on this page");
      return;
    }
    
    // Get all links within the project content
    const links = projectContent.querySelectorAll('a');
    console.log(`[PROJECT-LINKS] Found ${links.length} links in project content`);
    
    links.forEach(function(link, index) {
      // Skip links that already have a target attribute or are anchor links
      if (link.hasAttribute('target') || link.getAttribute('href').startsWith('#')) {
        console.log(`[PROJECT-LINKS] Skipping link ${index + 1} (already has target or is anchor link): ${link.href}`);
        return;
      }
      
      console.log(`[PROJECT-LINKS] Processing link ${index + 1}: ${link.href}`);
      
      // Add target and rel attributes
      link.setAttribute('target', '_blank');
      link.setAttribute('rel', 'noopener noreferrer');
      
      console.log(`[PROJECT-LINKS] Added target="_blank" to link: ${link.href}`);
    });
  }
})();
</script>


</BaseLayout>

<style lang="less">
/*-- -------------------------- -->
<---       Custom Landing      -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  .page-header {
    padding: 0; /* Remove padding as we want full-width */
    margin-top: 60px; /* Add margin to push content below navbar */
    
    .full-width-image-container {
      position: relative;
      width: 100vw;
      height: 50vh; /* Significantly increased height */
      overflow: hidden;
      
      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: 60% center; /* Keep focus on top */
        display: block;
      }
      
      .header-overlay {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: rgba(0, 0, 0, 0.4);
      }
      
      .header-title {
        color: var(--primary);
        text-align: center;
        margin: 0;
        padding: 0 1rem;
        font-size: var(--headerFontSize, 2.5rem);
        font-weight: 700;
        line-height: 1.2em;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.6);
      }
    }
  }
}

/* Large screens (desktops and tablets) */
@media only screen and (min-width: 768px) {
  .page-header {
    .full-width-image-container {
      height: 80vh; /* Significantly increased height */
      
      .header-title {
        font-size: 4rem;
      }
    }
  }
}

/* Extra Large screens (wide desktops) */
@media only screen and (min-width: 1200px) {
  .page-header {
    .full-width-image-container {
      height: 70vh; /* Significantly increased height */
    }

    .header-title {
      font-size: 5rem;
    }
  }
}

/*-- -------------------------- -->
<---       Custom Landing      -->
<--- -------------------------- -*/

/* Custom styles for project page */
  .blog-article {
    .blog-h1 {
      text-align: center;
      width: 100%;
      max-width: 100%;
      margin-left: auto;
      margin-right: auto;
      padding: 0 1rem;
    }
    
    .blog-authorGroup {
      display: flex;
      justify-content: center;
      width: 100%;
      
      .blog-author {
        text-align: center;
      }
    }
  }

/* Large screens (desktops and tablets) */
@media only screen and (min-width: 768px) {
  .page-header {
    .full-width-image-container {
      height: 80vh; /* Significantly increased height */
      
      .header-title {
        font-size: 4rem;
      }
    }
  }
  
  /* Custom styles for project page on larger screens */
  .blog-article {
    .blog-h1 {
      font-size: 2.5rem;
      max-width: 90%;
    }
  }
}

/* Extra Large screens (wide desktops) */
@media only screen and (min-width: 1200px) {
  .page-header {
    .full-width-image-container {
      height: 70vh; /* Significantly increased height */
    }

    .header-title {
      font-size: 5rem;
    }
  }
  
  /* Custom styles for project page on extra large screens */
  .blog-article {
    .blog-h1 {
      font-size: 3rem;
      max-width: 80%;
    }
  }
}

  /* Centered header styles */
  .centered-header {
    width: 100%;
    max-width: (795/16em);
    margin: 0 auto (32/16rem) auto;
    text-align: center;
    
    .project-mainImage {
      width: 100%;
      height: clamp(200px, 30vw, 400px); /* Increased height with responsive clamp */
      margin-bottom: (60/16rem); /* Increased margin below image */
      border-radius: (8/16rem);
      display: block;
      position: relative;
      overflow: hidden;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
    
    .blog-h1 {
      font-size: clamp(20px, 5vw, 39px);
      font-weight: 700;
      line-height: 1.4em;
      text-align: center;
      width: 100%;
      max-width: 100%;
      margin: (16/16rem) 0;
      color: var(--headerColor);
      padding: 0 (16/16rem);
    }
    
    .blog-authorGroup {
      display: flex;
      justify-content: center;
      width: 100%;
      
      .blog-author {
        text-align: center;
        font-size: (14/16rem);
        line-height: 1.5em;
        color: var(--bodyTextColor);
      }
    }
  }

/*-- -------------------------- -->
<---       Project Partners     -->
<--- -------------------------- -*/
 @media only screen and (min-width: 64em) {
    #project-partners-sidebar {
      margin-top: (50/16rem); /* Move sidebar down slightly */
      margin-left: 7rem;
      width: 40%;
      padding-right: (20/16rem); /* Add right padding */
      
      .blog-sidebar {
        width: 100%;
        max-width: 100%;
      }
    }
    
    .blog-container .main-content {
      width: 65%;
    }
  }
  
  /* Responsive adjustments for larger screens */
  @media only screen and (min-width: 768px) {
    .centered-header {
      .blog-h1 {
        font-size: 2.5rem;
        max-width: 90%;
        margin-left: auto;
        margin-right: auto;
      }
    }
  }
  
  @media only screen and (min-width: 1200px) {
    .centered-header {
      .blog-h1 {
        font-size: 3rem;
        max-width: 80%;
      }
    }
  }
