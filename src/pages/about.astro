---
import BaseLayout from "src/layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";
import { getCollection } from "astro:content";

// Get the about page content
const pages = await getCollection("pages");
const aboutPage = pages.find(page => page.data.pageId === "about");

// If no content is found, we'll use the hardcoded content
const mainContent = aboutPage?.data.mainContent || "";
const missionTitle = aboutPage?.data.missionTitle || "Mission";
const missionStatement = aboutPage?.data.missionStatement || "";
const missionContent = aboutPage?.data.missionContent || "";
---

<BaseLayout
  title="About"
  description="Meta description for the page"
>
  <!-- Header Image -->
  <section class="page-header">
    <div class="full-width-image-container">
      <img src="/assets/images/About-Mission.jpg" alt="About page header" />
      <div class="header-overlay">
        <h1 class="header-title">ABOUT</h1>
      </div>
    </div>
  </section>

  <!-- Content -->
  <section id="content-1450">
    <div class="cs-container">
      <div class="cs-content">
        <p class="cs-text" set:html={mainContent}></p>
        <br><br>
        
        <h2 class="cs-title">{missionTitle}</h2><br>
        {missionStatement && (
          <span class="cs-topper">{missionStatement}</span>
        )}
        <br><br>
        <p class="cs-text" set:html={missionContent}></p>
      </div>
    </div>
  </section>
                              
  <CTA />
</BaseLayout>

<style lang="less">
  /* PAGE-SPECIFIC STYLES FOR THE ABOUT PAGE */

/*-- -------------------------- -->
<---       Custom Landing      -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  .page-header {
    padding: 0; /* Remove padding as we want full-width */
    margin-top: 60px; /* Add margin to push content below navbar */
    
    .full-width-image-container {
      position: relative;
      width: 100vw;
      height: 50vh; /* Significantly increased height */
      overflow: hidden;
      
      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: top center; /* Keep focus on top */
        display: block;
      }
      
      .header-overlay {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: rgba(0, 0, 0, 0.4);
      }
      
      .header-title {
        color: var(--primary);
        text-align: center;
        margin: 0;
        padding: 0 1rem;
        font-size: var(--headerFontSize, 2.5rem);
        font-weight: 700;
        line-height: 1.2em;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.6);
      }
    }
  }
}

/* Large screens (desktops and tablets) */
@media only screen and (min-width: 768px) {
  .page-header {
    .full-width-image-container {
      height: 80vh; /* Significantly increased height */
      
      .header-title {
        font-size: 4rem;
      }
    }
  }
}

/* Extra Large screens (wide desktops) */
@media only screen and (min-width: 1200px) {
  .page-header {
    .full-width-image-container {
      height: 70vh; /* Significantly increased height */
    }

    .header-title {
      font-size: 5rem;
    }
  }
}


  /*-- -------------------------- -->
<---          Content           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #content-1450 {
        padding: var(--sectionPadding);
        
        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-title, .cs-text {
            max-width: 100%;
        }

        .cs-text {
            /* 16px - 20px */
            font-size: clamp(1rem, 2vw, 1.25rem);
            margin: 0 0 (32/16rem) 0;
        }
         .cs-topper {
            text-align: center;
            width: 80%; /* Ensures the element takes full width */
            display: block; /* Makes it a block element for proper centering */
            margin: 0 auto; /* Center the element */
            line-height: 1.5;
  }
    }
}
                                
</style>
