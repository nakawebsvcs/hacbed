---
import BaseLayout from "src/layouts/BaseLayout.astro";
import QUOTE from "@components/QUOTE-home.astro";
import { getCollection } from "astro:content";

// Fetch all projects
const allProjects = await getCollection("projects");

// Fetch home page content
const homeContent = await getCollection("home");
const homePage = homeContent[0];


// Group projects by category
const projectsByCategory = {
  "Capacity Building & Technical Assistance": allProjects.filter(
    project => project.data.category === "Capacity Building & Technical Assistance"
  ),
  
  "Network Coordination": allProjects.filter(
    project => project.data.category === "Network Coordination"
  ),
  
  "Strategic & Community-Based Planning": allProjects.filter(
    project => project.data.category === "Strategic & Community-Based Planning"
  ),

  "Past Support": allProjects.filter(
    project => project.data.category === "Past Support"
  )
};
---

<BaseLayout
  title="HACBED | Hawaiʻi Alliance for Community-Based Economic Development"
  description="HACBED strives to achieve economic, social, and environmental justice in Hawaiʻi through community-based economic development."
>
  <!-- ============================================ -->
  <!--                    Hero                      -->
  <!-- ============================================ -->

  <section id="hero">
    <div class="cs-container">
      <div class="cs-flex-group">
         <span class="cs-topper">Hawaiʻi Alliance for<br>Community-Based Economic Development</span>
        <h1 class="cs-title">COMMUNITY VOICE. <br/> COLLECTIVE ACTION.</h1>
        <!-- <p class="cs-text">
          This intermediate kit includes a pre-configured Astro environment, which
allows for repeated components, centralized data and greater room to scale as your clients grow. Decap CMS has been integrated to run a blog.
        </p> -->
        <a href="/about/how-we-work" class="cs-button-solid">How We Work</a>
        <a href="/about/our-ohana" class="cs-button-solid">Our ʻOhana</a>
        <a href="/about/our-roots" class="cs-button-solid">Our Roots</a>
      </div>
    </div>

    <!-- Background Image -->
    <!-- We can't use Astro <Picture /> as it does not support multiple sources -->
    <picture class="cs-picture">
      <source
        media="(max-width: 600px)"
        srcset="/assets/images/kalo-home-img.jpg"
      />
      <source media="(min-width: 601px)" srcset="/assets/images/kalo-home-img.jpg" />
      <img
        aria-hidden="true"
        decoding="async"
        alt="new home"
        width="2500"
        height="1667"
        loading="eager"
      />
    </picture>

  </section>

    <!-- ============================================ -->
<!--                  Content                     -->
<!-- ============================================ -->

<section id="first-paragraph">
    <div class="cs-container">
        <div class="cs-content">
            <p class="cs-text">
                {homePage.data.firstParagraphContent}
            </p>
            <h2 class="cs-title">Mission</h2><br>
            <span class="cs-topper">{homePage.data.missionStatement}</span>
        </div>
    </div>
  </section>

<!-- ============================================ -->
<!--                Side By Side                  -->
<!-- ============================================ -->

<section id="RPsbs-600">
    <picture class="cs-background">
        <source media="(max-width: 600px)" srcset="/assets/images/Our-Roots2.png">
        <source media="(min-width: 601px)" srcset="/assets/images/Our-Roots2.png">
        <img loading="lazy" decoding="async" src="/assets/images/Our-Roots2.png" alt="our roots" width="960" height="796">
    </picture>
    <div class="cs-container">
        <div class="cs-content">
            <span class="cs-topper">Where We Started</span>
            <p class="cs-text">
                {homePage.data.whereWeStartedContent}
            </p>
            <span class="cs-topper">Where We Are</span>
            <p class="cs-text">
                {homePage.data.whereWeAreContent}
            </p>
            <a href="/about/how-we-work" class="cs-button-solid">How We Work</a>
        </div>
    </div>
  </section>
                                
<!-- ============================================ -->
<!--              Side By Side Reverse            -->
<!-- ============================================ -->

<section id="RPsbsr-600">
    <picture class="cs-background">
        <source media="(max-width: 600px)" srcset="/assets/images/25-anniversary.png">
        <source media="(min-width: 601px)" srcset="/assets/images/25-anniversary.png">
        <img loading="lazy" decoding="async" src="/assets/images/25-anniversary.png" alt="our 25th anniversary" width="960" height="796">
    </picture>
    <div class="cs-button-container">
        <a href="/about/our-ohana" class="cs-button-solid desktop-button">Our 'Ohana</a>
    </div>
    <div class="cs-container">
        <div class="cs-content">
            <span class="cs-topper">Where We See Ourselves</span>
            <p class="cs-text">
                {homePage.data.whereWeSeeOurselvesContent}
            </p>
            <span class="cs-topper">Where We Want to Go</span>
            <p class="cs-text">
                {homePage.data.whereWeWantToGoContent}
            </p>
            <a href="/about/our-ohana" class="cs-button-solid mobile-button">Our 'Ohana</a>
        </div>
    </div>
  </section>

<!-- ============================================ -->
<!--                  Services                    -->
<!-- ============================================ -->

<section id="services-448">
    <div class="cs-container">
        <div class="cs-content">
            <h2 class="cs-title">Current Support</h2>
            <p class="cs-text">
                {homePage.data.currentSupportDesc}
            </p>
        </div>
        <ul class="cs-card-group">
            <li class="cs-item">
                <div class="cs-flex">
                    <picture class="cs-wrapper">
                        <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/images/taro-icon.svg" alt="icon" width="70" height="70">
                    </picture>
                    <h3 class="cs-h3">Capacity Building and Technical Assistance</h3>
                 <!--    <p class="cs-item-text">Strengthening grassroots organizations through strategic planning, training, and coaching to support sustainable, community-driven initiatives.</p> -->
                    
                    {/* Dynamic project links */}
                    {projectsByCategory["Capacity Building & Technical Assistance"].map(project => (
                        <a href={`/projects/${project.id}`} class="cs-link">{project.data.title}</a>
                    ))}
                    
                    {/* Show a message if no projects */}
                    {projectsByCategory["Capacity Building & Technical Assistance"].length === 0 && (
                        <p class="cs-item-text">No content to show.</p>
                    )}
                </div>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)" srcset="/assets/images/Capacity-Building-TA.jpg">
                    <source media="(min-width: 601px)" srcset="/assets/images/Capacity-Building-TA.jpg">
                    <img aria-hidden="true" loading="lazy" decoding="async" src="/assets/images/Capacity-Building-TA.jpg" alt="capacity building and technical assistance" width="345" height="428">
                </picture>
            </li>
            <li class="cs-item">
                <div class="cs-flex">
                    <picture class="cs-wrapper">
                        <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/images/taro-icon.svg" alt="icon" width="70" height="70">
                    </picture>
                    <h3 class="cs-h3">Network Coordination</h3>
                 <!--   <p class="cs-item-text">Building and strengthening networks, fostering collaboration among community organizations, institutions, and individuals for greater collective impact.</p> -->
                    
                    {/* Dynamic project links */}
                    {projectsByCategory["Network Coordination"].map(project => (
                        <a href={`/projects/${project.id}`} class="cs-link">{project.data.title}</a>
                    ))}
                    
                    {/* Show a message if no projects */}
                    {projectsByCategory["Network Coordination"].length === 0 && (
                        <p class="cs-item-text">No content to show.</p>
                    )}
                </div>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)" srcset="/assets/images/Network-Coordination.jpg">
                    <source media="(min-width: 601px)" srcset="/assets/images/Network-Coordination.jpg">
                    <img aria-hidden="true" loading="lazy" decoding="async" src="assets/images/Network-Coordination.jpg" alt="network coordination" width="345" height="428">
                </picture>
            </li>
            <li class="cs-item">
                <div class="cs-flex">
                    <picture class="cs-wrapper">
                        <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/images/taro-icon.svg" alt="icon" width="70" height="70">
                    </picture>
                    <h3 class="cs-h3">Strategic & Community-Based Planning</h3>
               <!--     <p class="cs-item-text">Helping communities create and implement sustainable development strategies, ensuring local voices shape decisions and outcomes.</p> -->
                    
                    {/* Dynamic project links */}
                    {projectsByCategory["Strategic & Community-Based Planning"].map(project => (
                        <a href={`/projects/${project.id}`} class="cs-link">{project.data.title}</a>
                    ))}
                    
                    {/* Show a message if no projects */}
                    {projectsByCategory["Strategic & Community-Based Planning"].length === 0 && (
                        <p class="cs-item-text">No content to show.</p>
                    )}
                </div>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)" srcset="/assets/images/Strategic-Planning.jpg">
                    <source media="(min-width: 601px)" srcset="/assets/images/Strategic-Planning.jpg">
                    <img aria-hidden="true" loading="lazy" decoding="async" src="assets/images/Strategic-Planning.jpg" alt="strategic and community-based planning" width="345" height="428">
                </picture>
            </li>
        </ul>
    </div>
    <div class="cs-container">
        <div class="cs-content" style="margin-top: 6rem;">
            <h2 class="cs-title">Past Support</h2>
             <p class="cs-text">
                {homePage.data.pastSupportDesc}
            </p>
        </div>
        <ul class="cs-card-group">
            <li class="cs-item">
                <div class="cs-flex">
                    <picture class="cs-wrapper">
                        <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/images/taro-icon.svg" alt="icon" width="70" height="70">
                    </picture>
                    <h3 class="cs-h3">Past Support</h3>
                 <!--   <p class="cs-item-text">Lorem ipsum dolor sit amet, consectetur.</p> -->
                    {/* Dynamic project links */}
                    {projectsByCategory["Past Support"].map(project => (
                        <a href={`/projects/${project.id}`} class="cs-link">{project.data.title}</a>
                    ))}
                    
                    {/* Show a message if no projects */}
                    {projectsByCategory["Past Support"].length === 0 && (
                        <p class="cs-item-text">No content to show.</p>
                    )}
                </div>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)" srcset="/assets/images/Past-Projects.jpg">
                    <source media="(min-width: 601px)" srcset="/assets/images/Past-Projects.jpg">
                    <img aria-hidden="true" loading="lazy" decoding="async" src="assets/images/Past-Projects.jpg" alt="past projects" width="345" height="428">
                </picture>
            </li>
        </ul>
    </div>
</section>   

<!-- ============================================ -->
<!--                  Content                     -->
<!-- ============================================ -->

<section id="reflections">
    <div class="cs-container">
        <div class="cs-content">
            <h2 class="cs-title">{homePage.data.finalParagraphTitle}</h2>
            <p class="cs-text">
                <br>
                {homePage.data.finalParagraphContent}
            </p>
            <a href="/about/our-roots/" class="cs-button-solid">Our Roots</a>
        </div>
    </div>
  </section>
                                

  <QUOTE />
</BaseLayout>

<style lang="less">
  /* STYLES FOR ABOVE THE FOLD */

 /*-- -------------------------- -->
<---           Hero             -->
<--- -------------------------- -*/

/* Base styles for all screen sizes */
#hero {
  font-family: "Lato", "Arial", sans-serif;
  text-align: center;
  position: relative;
  z-index: 1;
  overflow: hidden;
  
  /* Add these to make the hero a flex container */
  display: flex;
  align-items: center;
  min-height: 100vh; /* Adjust this value as needed */
  padding: 0 (16/16rem);
  
  .cs-picture {
    /* Background Image */
    width: 100%;
    height: 100%;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -2;

    &:before {
      /* Black Color Overlay */
      content: "";
      width: 100%;
      height: 100%;
      background: #000;
      opacity: 0.5;
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1;
      pointer-events: none;
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
    }
  }

  .cs-container {
    width: 100%;
    max-width: (1280/16em);
    margin: auto;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    
    /* Important: Use a consistent padding that's not too large */
    padding: clamp(2em, 5vw, 3em) 0;
  }

  .cs-flex-group {
    width: 90vw;
    max-width: clamp(35em, 80vw, 50em);
    margin: auto; /* This centers it horizontally */
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center; /* Changed from flex-start to center */
    flex-wrap: wrap;
    padding: 4rem 0; /* Add padding to create space within the group */
  }

  .cs-topper {
    text-align: center;
    margin-bottom: (16/16rem);
    color: var(--primary);
    font-size: clamp(0.9rem, 2vw, 1.5rem);
    width: 100%;
    max-width: 100%;
  }

  .cs-title {
    text-align: center;
    width: 100%;
    max-width: 100%;
    color: var(--bodyTextColorWhite);
    font-size: clamp(3rem, 5vw, 5rem);
  }

  .cs-button-solid {
    line-height: clamp(2.875em, 5.5vw, 3.5em);
    height: initial;
    margin-bottom: calc(16 / 16 * 1rem);
    margin-right: calc(10 / 16 * 1rem);
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48em) {
  #hero {
    padding: 0 clamp(2em, 5vw, 2.5em);

    .cs-button-solid {
      margin-right: (20/16rem);
      margin-bottom: 0;
    }
  }
}

/* Desktop Parallax Effect - 1300px */
@media only screen and (min-width: 81.25em) {
  #hero {
    background: url("/assets/images/hero.jpg");
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
  }
}

/* Large screens - prevent wrapping */
@media only screen and (min-width: 90em) { /* 1440px */
  #hero .cs-title {
    font-size: 5rem; /* Fixed size for large screens */
    line-height: 1.2;
    white-space: nowrap;
  }
}

  /* PAGE-SPECIFIC STYLES FOR THE HOME PAGE */

   h2 {
    font-weight: 400;
  }

/*-- -------------------------- -->
<---          First Paragraph    -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #first-paragraph {
        padding: var(--sectionPadding);
        
        .cs-container {
            width: 100%;
            max-width: (1100/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-title, .cs-text {
            max-width: 100%;
        }

        .cs-text {
            /* 16px - 20px */
            font-size: clamp(1rem, 2vw, 1.25rem);
            margin: 0 0 (32/16rem) 0;
        }

         .cs-topper {
            text-align: center;
            width: 80%; /* Ensures the element takes full width */
            display: block; /* Makes it a block element for proper centering */
            margin: 0 auto; /* Center the element */
            line-height: 1.5;
  }

    }
}

/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

@media only screen and (min-width: 48rem) and (max-width: 63.9375rem) {
    #RPsbs-600,
    #RPsbsr-600 {
        .cs-button-solid {
            margin-top: 2rem;
            margin-bottom: 4rem; /* Increased padding at bottom */
        }
    }
}

/* First section - shadow only on top */
#RPsbs-600 {
    position: relative;
    background-color: #E5EFD4;
    /* Use the 4-value syntax for box-shadow to control each side precisely */
    /* offset-x | offset-y | blur-radius | color */
    box-shadow: 
        0px -5px 15px rgba(0, 0, 0, 0.3), /* Top shadow */
        0px 0px 0px rgba(0, 0, 0, 0);     /* No bottom shadow */
    z-index: 2; /* Higher z-index to ensure it's above the second section */
}

/* Second section - shadow only on bottom */
#RPsbsr-600 {
    position: relative;
    background-color: #E5EFD4;
    box-shadow: 
        0px 0px 0px rgba(0, 0, 0, 0),     /* No top shadow */
        0px 5px 15px rgba(0, 0, 0, 0.3);  /* Bottom shadow */
    z-index: 1; /* Lower z-index */
    margin-top: -1px; /* Slight overlap to prevent any gap between sections */
}

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #RPsbs-600,
    #RPsbsr-600 {
        position: relative;
        background-color: #E5EFD4;

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (522/16rem);
            /* moved section padding to cs-content so the cs-background can be full width */
            padding: var(--sectionPadding);
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-text {
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-button-solid {
                align-self: center;
                margin-top: 1rem;
            }

        .cs-background {
            display: block;
            position: relative;
            width: 100%;
            height: (256/16rem);
            z-index: 1;
            overflow: hidden; /* Ensures the image respects the border radius */

            img {
                height: auto;
                width: 100%;
                aspect-ratio: 16/9;
                box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.3);
                border-radius: 4px;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 64rem) { /* Changed from 48rem to 64rem (1024px) */
    #RPsbs-600,
    #RPsbsr-600 {
        /* 90px - 150px */
        /* returned section padding to the section container, this Stitch has 1.5X padding top and bottom than the normal Stitch */
        padding: clamp(5rem, 7vw, 7rem) (16/16rem);
        .cs-container {
            flex-direction: row;
            justify-content: flex-end;
            gap: clamp(1.5rem, 3vw, 2.5rem);
        }

        .cs-background {
            width: 50%;
            height: 100%;
            position: absolute;
            top: 44%;
            right: 49%;
            transform: translateY(-50%);
            display: flex;
            align-items: center;
            padding-left: clamp(1rem, 3vw, 2rem);
        }

        .cs-topper {
            padding-bottom: 1rem;
        }

        .cs-content {
            width: 45%;
            padding: 0;
        }

         .cs-button-solid {
                    align-self: flex-start;
                }
    }
}


/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

.desktop-button {
    display: none; /* Hide by default on all screens */
}

.mobile-button {
    display: inline-block; /* Show by default on all screens */
}

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #RPsbsr-600 {
        background-color: #E5EFD4;

        .cs-text {
            opacity: 0.8;
        }
        .cs-button-container {
        width: 100%;
        display: flex;
        justify-content: center;
        position: relative;
        z-index: 2;
        margin-top: -1.5rem; /* Adjust this value to position the button properly */
        margin-bottom: 2rem; /* Add space between button and content */
    }
}
}

/* Tablet - 768px */
@media only screen and (min-width: 64rem) {
    #RPsbsr-600 {
        .cs-container {
            justify-content: flex-start;
        }

        .cs-background {
            left: 49%; /* Adjust position to move closer to center */
            right: auto;
            top: 37%;
            padding-right: clamp(1rem, 3vw, 2rem);
        }

         .cs-button-container {
            position: absolute;
            left: 73.5%; /* Adjust to align with the image */
            top: 75%; /* Position below the image */
            width: auto;
        }

         .desktop-button {
            display: block; /* Show on desktop */
            position: absolute;
            left: 25%; 
            top: 75%;
            transform: translateX(-50%);
            white-space: nowrap; /* Prevent text wrapping */
            width: auto; /* Allow button to size to content */
        }
        
        .mobile-button {
            display: none; /* Hide on desktop */
        }
        
        .cs-content {
            /* Add a small margin to pull content closer to center */
            margin-left: clamp(1rem, 2vw, 2rem);
            margin-right: 0;
        }
    }
}

@media only screen and (min-width: 48rem) and (max-width: 63.9375rem) {
    #RPsbs-600,
    #RPsbsr-600 {
        .cs-background {
            height: (350/16rem); /* Increase image height for tablets */
            width: 100%;
            max-width: (600/16rem);
            margin: 0 auto;
            position: relative;
            top: auto;
            right: auto;
            left: auto;
            transform: none;
            padding: 0;
        }
        
        .cs-content {
            width: 100%;
            max-width: (600/16rem);
            margin: 0 auto;
            padding: 0 (24/16rem);
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #RPsbsr-600 {
         .desktop-button {
            display: block; /* Show on desktop */
            position: absolute;
            left: 25%; /* Align with the image */
            top: 75%; /* Position below the image */
            transform: translateX(-50%); /* Center the button */
            white-space: nowrap; /* Prevent text wrapping */
            /* Add margin that scales with viewport */
            margin: clamp(0.5rem, 1vw, 2rem) auto;
        }
        
        .mobile-button {
            display: none; /* Hide on desktop */
        }
    }
}


/*-- -------------------------- -->
<---          Reflections    -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #reflections {
        padding: var(--sectionPadding);
        
        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 90%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-title, .cs-text {
            max-width: 100%;
        }

        .cs-topper {
            padding-bottom: 2rem;
        }

        .cs-text {
            /* 16px - 20px */
            font-size: clamp(.9rem, 1.9vw, 1.1rem);
            margin: 0 0 (18/16rem) 0;
        }

        .cs-button-solid {
            margin-top: clamp(3rem, 5vw, 5rem);
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #reflections {
        margin-top: -4rem;
    }
}


/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #services-448 {
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            /* changes at 1280px at tablet */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-card-group {
            width: 100%;
            padding: 0;
            margin: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            /* 16px - 20px */
            column-gap: clamp(1rem, 1.5vw, 1.25rem);
            /* 24px - 60px */
            row-gap: clamp(1.5rem, 5vw, 3.75rem);
        }

        .cs-item {
            list-style: none;
            width: 100%;
            max-width: (360/16rem);
            /* changes at desktop */
            padding-top: (200/16rem);
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            &:hover {
                .cs-picture {
                    img {
                        transform: scale(1.2);
                        opacity: 0.4;
                    }
                }

                .cs-flex {
                    &:before {
                        opacity: 1;
                    }
                }
            }
        }

        .cs-picture {
            width: 100%;
            /* changes at desktop */
            height: (250/16rem);
            border-radius: (8/16rem);
            background-color: var(--primary);
            /* clips the corners of the image */
            overflow: hidden;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* makes it behave like a background image */
                object-fit: cover;
                /* positions top of image to the top of the container */
                object-position: center 100% !important;
                transition:
                    transform 0.9s,
                    opacity 0.5s;
            }
        }

        .cs-flex {
    text-align: center;
    width: 88%;
    padding: 0 (24/16rem) (24/16rem) (24/16rem);
    /* prevents padding and border from affecting height and width */
    box-sizing: border-box;
    border: 1px solid #dad9e3;
    border-radius: (12/16rem);
    background-color: #fffffff4;
    box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
    /* Add minimum height for consistent card sizing */
    min-height: clamp(380/16rem, 30vw, 400/16rem);

    &:before {
        /* hover border box */
        content: "";
        background: transparent;
        /* prevents the mouse from interacting with it */
        pointer-events: none;
        border: 4px solid var(--primary);
        border-radius: (12/16rem);
        /* prevents border from affecting height and width */
        box-sizing: border-box;
        opacity: 0;
        position: absolute;
        display: block;
        top: -1px;
        left: -1px;
        right: -1px;
        bottom: -1px;
        transition: opacity 0.5s;
    }
}

        .cs-wrapper {
            /* 80px - 120px */
            width: clamp(3rem, 7.2vw, 5.5rem);
            height: clamp(3rem, 7.2vw, 5.5rem);
            /* 20px - 24px */
            margin: 0 0 clamp(1.25rem, 1.5vw, 1.5rem);
            /* we use the same clamp value for height & width, but multiple by -.5 so it will be a negative value, and be half of the height.  Negative margins pull things toward the element so they overlap them, in this case we want the .cs-wrapper to overlap .cs-flex by half its height, so we use the same clamp for height and half it for the margin top value */
            margin-top: ~"calc(clamp(5rem, 9.2vw, 7.5rem)*-.5)";
            border-radius: 50%;
            border: 4px solid var(--primary);
            background-color: #ffffffc8;
            /* prevents border from affecting height and width */
            box-sizing: border-box;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            z-index: 10;
        }

        .cs-icon {
            /* 48px - 64px */
            width: clamp(3rem, 4.3vw, 4rem);
            height: auto;
            display: block;
        }

        .cs-h3 {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 1.9vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0 0 (8/16rem) 0;
            color: var(--headerColor);
        }

       /* .cs-title {
            font-size: clamp(3rem, 3.5vw, 3.25rem);
            line-height: 1.5em;
            font-weight: 700;
            margin: 0 0 (8/16rem) 0;
            color: var(--secondary);
        } */

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            font-weight: 400;
            /* 20px - 24px */
            margin: 0 0 clamp(1.25rem, 1.5vw, 1.5rem);
            color: var(--bodyTextColor);
        }

        .cs-link {
            /* 16px - 20px */
            font-size: clamp(1rem, 1.5vw, 1.3rem);
            line-height: 1.5em;
            font-weight: 400;
            text-decoration: none;
            margin: 0;
            padding: .4rem;
            color: var(--secondary);
            display: inline-block;
            position: relative;

            &:hover {
                &:before {
                    width: 100%;
                }
            }

            &:before {
                /* animated underline */
                content: "";
                width: 0%;
                height: 3px;
                background: currentColor;
                opacity: 1;
                position: absolute;
                display: block;
                bottom: (-2/16rem);
                left: 0;
                transition: width 0.3s;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #services-448 {
        .cs-container {
            max-width: (1280/16rem);
        }

        .cs-card-group {
            flex-direction: row;
        }

        .cs-item {
            width: 47%;
        }

        .cs-text {
            width:75%;
        }

         .cs-link {
            /* 16px - 20px */
            font-size: clamp(1rem, 1.5vw, 1.3rem);
            line-height: 1.5em;
            font-weight: 400;
         }

        .cs-picture {

            img {
              object-position: center 100% !important;
            }
        }
    }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #services-448 {
        .cs-card-group {
            flex-wrap: nowrap;
        }
        .cs-item {
            width: 100%;
            /* 144px - 274px */
            padding-top: clamp(15rem, 23vw, 23rem);
        }

         .cs-link {
            /* 16px - 20px */
            font-size: clamp(1rem, 1.2vw, 1rem);
            line-height: 1.5em;
            font-weight: 400;
         }

        .cs-picture {
            /* 224px - 428px */
            height: clamp(14rem, 28vw, 26.75rem);

            img {
              object-position: center 100% !important;
            }
        }
    }
}
                                
                                
</style>
